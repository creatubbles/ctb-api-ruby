#!/usr/bin/env ruby

$:.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'optparse'
require 'creatubbles'

auth_details = Creatubbles::Utils::AuthDetails.from_env

creation_details = {}
galleries = []

opt_parser = OptionParser.new do |opt|
  opt.banner = "Usage: ctb_uploader <file> [OPTIONS]"
  opt.separator  ""
  opt.separator  "file"
  opt.separator  "     path to file you'd like to upload; has to be a supported file type"
  opt.separator  ""
  opt.separator  "Environment"
  Creatubbles::Utils::AuthDetails.option_parser_env_explain(opt)
  opt.separator  ""
  opt.separator  "Options"

  Creatubbles::Utils::AuthDetails.option_parser_handle(opt,auth_details)

  opt.on("-n","--name NAME","creation name") do |name|
    creation_details[:name] = name
  end
  opt.on("-d","--description TEXT","description text") do |text|
    creation_details[:description] = text
  end

  opt.on("-c","--creation CREATION_ID","upload for existing creation instead of creating new one") do |creation_id|
    creation_details[:id] = creation_id
  end

  opt.on("-g","--gallery GALLERY_ID","add creation to gallery") do |gallery_id|
    galleries << gallery_id
  end

  opt.on("-h","--help","help") do
    puts opt_parser
    exit
  end
end

opt_parser.parse!

if (file=ARGV[0])
  client = Creatubbles::Client.new(auth_details)
  if creation_details[:id]
    creation = client.creations.find(creation_details[:id])
    puts "uploading for existing creation #{creation.id}"
  else
    creation = client.creations.create(creation_details)
    puts "created creation #{creation.id}"
  end
  upload = creation.upload(file)
  puts " - uploaded #{file}"
  galleries.each do |gallery_id|
    gallery = client.galleries.find(gallery_id)
    gallery.add_creation(creation)
    puts " - added to gallery #{gallery_id}"
  end
  print "processing.."
  while (upload.reload.processing?)
    print "."
    sleep 2
  end
  print " "
  if upload.aborted?
    puts upload.aborted_with
    puts "processing details: #{upload.processing_details.inspect}" if upload.processing_details
  else
    puts "done"
  end
else
  puts opt_parser
end
